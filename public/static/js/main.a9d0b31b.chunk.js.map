{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","helpers/prepareEvents.js","actions/events.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CandelarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","NavBar","name","useSelector","state","auth","dispatch","useDispatch","className","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CandelarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","nowStart","minutes","seconds","add","nowEnd","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","id","resp","json","ok","msg","getState","uid","evento","__id","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","console","log","locale","localizer","momentLocalizer","CalendarScreen","eventos","lastView","setLastView","selectable","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","_id","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","view","useForm","initialState","values","setValues","reset","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","email","password","Date","getTime","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9d0b31b.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = \"GET\") => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n\r\nconst fetchConToken = (endpoint, data, method = \"GET\") => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n    if (method === \"GET\") {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"x-token\": token,\r\n            },\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                \"x-token\": token,\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n    }\r\n};\r\n\r\nexport { fetchSinToken, fetchConToken };\r\n","export const types = {\r\n    uiOpenModal: \"[ui] Open Modal\",\r\n    uiCloseModal: \"[ui] Close Modal\",\r\n\r\n    eventSetActive: \"[event] Set Active\",\r\n    eventLogout: \"[event] Event logout\",\r\n    eventStartAddNew: \"[event] Start Add new\",\r\n    eventAddNew: \"[event] Add new\",\r\n    eventClearActiveEvent: \"[event] Clear active event\",\r\n    eventUpdated: \"[event] Event updated\",\r\n    eventDeleted: \"[event] Event deleted\",\r\n    eventLoaded: \"[event] Event loaded\",\r\n\r\n    authCheckingFinish: \"[auth] Finish checking login state\",\r\n    authStartLogin: \"[auth] Start Login\",\r\n    authLogin: \"[auth] Login\",\r\n    authStartRegister: \"[auth] Start Register\",\r\n    authRegister: \"[auth] Register\",\r\n    authStartTokenRenew: \"[auth] Start token renew\",\r\n    authLogout: \"[auth] Logout\",\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken(\r\n            \"auth/new\",\r\n            { email, password, name },\r\n            \"POST\"\r\n        );\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            Swal.fire(\"Error\", body.msg, \"error\");\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken(\"auth/renew\");\r\n        const body = await resp.json();\r\n        if (body.ok) {\r\n            localStorage.setItem(\"token\", body.token);\r\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n            dispatch(\r\n                login({\r\n                    uid: body.uid,\r\n                    name: body.name,\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish,\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    };\r\n};\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map((e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }));\r\n};\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken(\"events\", event, \"POST\");\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    __id: uid,\r\n                    name: name,\r\n                };\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {}\r\n    };\r\n};\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent,\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(\r\n                `events/${event.id}`,\r\n                event,\r\n                \"PUT\"\r\n            );\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n        } catch (error) {}\r\n    };\r\n};\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        console.log(id);\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\");\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire(\"Error\", body.msg, \"error\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(\"events\");\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {}\r\n    };\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { eventLogout } from \"../../actions/events\";\r\n\r\nconst NavBar = () => {\r\n    const { name } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(eventLogout());\r\n        dispatch(startLogout());\r\n    };\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","export const messages = {\n    allDay: \"Todo el día\",\n    previous: \"<\",\n    next: \">\",\n    today: \"Hoy\",\n    month: \"Mes\",\n    week: \"Semana\",\n    day: \"Día\",\n    agenda: \"Agenda\",\n    date: \"Fecha\",\n    time: \"Hora\",\n    event: \"Evento\",\n    noEventsInRange: \"No hay eventos en este rango\",\n    showMore: (total) => `+ Ver más (${total})`,\n};\n","import React from \"react\";\r\n\r\nconst CandelarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{title} - </strong>\r\n            <span>{user.name}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CandelarEvent;\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal,\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport {\r\n    eventAddNew,\r\n    eventClearActiveEvent,\r\n    eventStartAddNew,\r\n    eventStartUpdate,\r\n    eventUpdated,\r\n} from \"../../actions/events\";\r\nconst customStyles = {\r\n    content: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"auto\",\r\n        bottom: \"auto\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n    },\r\n};\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst nowStart = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst nowEnd = nowStart.clone().add(1, \"hours\");\r\n\r\nconst initEvent = {\r\n    title: \"\",\r\n    notes: \"\",\r\n    start: nowStart.toDate(),\r\n    end: nowEnd.toDate(),\r\n};\r\n\r\nconst CalendarModal = () => {\r\n    const { modalOpen } = useSelector((state) => state.ui);\r\n    const { activeEvent } = useSelector((state) => state.calendar);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(nowStart.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowEnd.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e,\r\n        });\r\n    };\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e,\r\n        });\r\n    };\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire(\r\n                \"Error\",\r\n                \"La fehca fin debe ser mayor a la fecha de inicio\",\r\n                \"error\"\r\n            );\r\n        }\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        setTitleValid(true);\r\n        closeModal();\r\n    };\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {activeEvent ? \"Editar Evento\" : \"Crear Evento\"} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${\r\n                            !titleValid && \"is-invalid\"\r\n                        }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Una descripción corta\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                        Información adicional\r\n                    </small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CalendarModal;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\n\r\nconst AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleClickNew}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default AddNewFab;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { eventStartDelete } from \"../../actions/events\";\r\n\r\nconst DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash mr-2\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default DeleteEventFab;\r\n","import moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport NavBar from \"../ui/NavBar\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { messages } from \"../../helpers/calendar-messages-es\";\r\nimport CandelarEvent from \"./CandelarEvent\";\r\nimport CalendarModal from \"./CalendarModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {\r\n    eventClearActiveEvent,\r\n    eventSetActive,\r\n    eventStartLoading,\r\n} from \"../../actions/events\";\r\nimport AddNewFab from \"../ui/AddNewFab\";\r\nimport DeleteEventFab from \"../ui/DeleteEventFab\";\r\n\r\nmoment.locale(\"es\");\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector((state) => state.calendar);\r\n    const { uid } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, []);\r\n\r\n    const [lastView, setLastView] = useState(\r\n        localStorage.getItem(\"lastView\") || \"month\"\r\n    );\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    };\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: uid === event.user._id ? \"#367CF7\" : \"#465660\",\r\n            borderRadius: \"0px\",\r\n            opacity: \"0.8\",\r\n            display: \"block\",\r\n            color: \"white\",\r\n        };\r\n        return {\r\n            style,\r\n        };\r\n    };\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    };\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    };\r\n    const onViewChange = (e) => {\r\n        setLastView(setLastView(e));\r\n        localStorage.setItem(\"lastView\", e);\r\n    };\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            <Calendar\r\n                selectable={true}\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CandelarEvent,\r\n                }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                view={lastView}\r\n            />\r\n            {activeEvent && <DeleteEventFab />}\r\n            <AddNewFab />\r\n            <CalendarModal />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarScreen;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startLogin, startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport \"./login.css\";\r\n\r\nconst LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: \"marcos@gmail.com\",\r\n        lPassword: \"1234567\",\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: \"Nando\",\r\n        rEmail: \"nando@gmail.com\",\r\n        rPassword1: \"1234567\",\r\n        rPassword2: \"1234567\",\r\n    });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    };\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire(\r\n                \"Error\",\r\n                \"Las contraseñas deben ser iguales\",\r\n                \"error\"\r\n            );\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nconst PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\r\n            }\r\n        />\r\n    );\r\n};\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\nexport default PublicRoute;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Router } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n                isAuthenticated ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport CalendarScreen from \"../components/calendar/CalendarScreen\";\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return <h5>Espere...</h5>;\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        isAuthenticated={!!uid}\r\n                        component={CalendarScreen}\r\n                    />\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        isAuthenticated={!!uid}\r\n                        component={LoginScreen}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload,\r\n            };\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            };\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload,\r\n            };\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload],\r\n            };\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n            };\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((event) => {\r\n                    return event.id == action.payload.id\r\n                        ? action.payload\r\n                        : event;\r\n                }),\r\n            };\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter((event) => {\r\n                    return event.id != state.activeEvent.id;\r\n                }),\r\n                activeEvent: null,\r\n            };\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload],\r\n            };\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers =\r\n    (typeof window !== \"undefined\" &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n    compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport AppRouter from \"./router/AppRouter\";\r\nimport { store } from \"./store/store\";\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default CalendarApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}